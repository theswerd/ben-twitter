---
import Layout from "../layouts/Layout.astro";
import Main from "../components/Main";
import SignIn from "../components/SignIn";
import { configureFreestyle, useCloud } from "freestyle-sh";
import { UserManager } from "../cloudstate/auth";

import cookie from "cookie";

configureFreestyle({
  createHeaders: () => Astro.request.headers,
});

{
  // TODO: remove this once we have a better way to handle sessions
  const parsedCookies = cookie.parse(Astro.request.headers.get("cookie") || "");
  const sessionId =
    parsedCookies["freestyle-session-id"] || crypto.randomUUID();
  Astro.response.headers.set(
    "set-cookie",
    `freestyle-session-id=${sessionId}; Path=/; HttpOnly; SameSite=Lax`
  );
}

const userManager = useCloud<typeof UserManager>(UserManager.id);
const session = await userManager
  .getUserFromSession(Astro.request.headers.get("cookie"))
  .then((session) => session);

if (session) {
  return Astro.redirect("/");
}
---

{session}
<Layout title="Freestyle.sh Project">
  <SignIn client:load />
  <!-- <Main client:load/> -->
</Layout>
